swagger: '2.0'
info:
  description: >-
    Sharrel API definition. Sharrel at
    [https://sharrel.com](https://sharrel.com).
  version: 1.0.0
  title: Sharrel API
  termsOfService: 'https://sharrel.com/terms/'
  contact:
    email: sharrel.com@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: 91lys089t9.execute-api.eu-west-3.amazonaws.com
basePath: /SharrelAPIDEVStage
tags:
  - name: users
    description: Everything about users
    externalDocs:
      description: Find out more
      url: 'http://sharrel.com'
  - name: shares
    description: Everything about shares
schemes:
  - https
paths:
  /users:
    get:
      tags:
        - users
      summary: Read informations about users
      description: ''
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Users'
        '404':
          description: Users not found
      security:
      - APIKeyHeader: []
  '/users/{username}':
    get:
      tags:
        - users
      summary: Read informations about a single user
      description: ''
      produces:
        - application/json
      parameters:
        - name: username
          in: path
          description: Username of user that needs to be fetched
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Users'
        '404':
          description: User not found
  /groups:
    get:
      tags:
        - groups
      summary: Read informations about groups
      description: ''
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Groups'
        '404':
          description: Groups not found
  '/groups/{id}':
    get:
      tags:
        - groups
      summary: Read informations about a single groups
      description: ''
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Id of group that needs to be fetched
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Groups'
        '404':
          description: User not found
  /shares:
    get:
      tags:
        - shares
      summary: Read informations about shares
      description: ''
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Shares'
        '404':
          description: Shares not found
    post:
      tags:
        - shares
      summary: Add a new share
      description: ''
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Share object that needs to be added
          required: true
          schema:
            $ref: '#/definitions/Shares'
      responses:
        '201':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Shares'
        '400':
          description: bad request
  '/shares/{id}':
    get:
      tags:
        - shares
      summary: Read informations about a single share
      description: ''
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Id of share that needs to be fetched
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Shares'
        '404':
          description: Share not found
  '/shares/group/{id}':
    get:
      tags:
        - shares
      summary: Find shares for a given group
      description: ''
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Id of group
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Shares'
        '404':
          description: Shares not found
  '/shares/group/{id}/host/{username}':
    get:
      tags:
        - shares
      summary: Find shares hosted by a user on a given group
      description: ''
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Id of group
          required: true
          type: integer
          format: int32
        - name: username
          in: path
          description: Username of host
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Shares'
        '404':
          description: Shares not found
  '/shares/group/{id}/host/{username}/guest/{username2}':
    get:
      tags:
        - shares
      summary: Find shares for a given host who has been sharing with a given guest on a given group
      description: ''
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Id of group
          required: true
          type: integer
          format: int32
        - name: username
          in: path
          description: Username of host
          required: true
          type: string
        - name: username2
          in: path
          description: Username of guest
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Shares'
        '404':
          description: Shares not found
  /deposits:
    get:
      tags:
        - deposits
      summary: Read informations about deposits
      description: ''
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Deposits'
        '404':
          description: Deposits not found
  '/deposits/{id}':
    get:
      tags:
        - deposits
      summary: Read informations about a single deposit
      description: ''
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Id of deposit that needs to be fetched
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Deposits'
        '404':
          description: Deposit not found
  '/deposits/payer/{username}':
    get:
      tags:
        - deposits
      summary: Find deposits payed by a user
      description: ''
      produces:
        - application/json
      parameters:
        - name: username
          in: path
          description: Username of payer
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Deposits'
        '404':
          description: Deposits not found
  '/deposits/payer/{username}/beneficiary/{username2}':
    get:
      tags:
        - deposits
      summary: Find deposits for a given payer and a given beneficiary
      description: ''
      produces:
        - application/json
      parameters:
        - name: username
          in: path
          description: Username of payer
          required: true
          type: string
        - name: username2
          in: path
          description: Username of beneficiary
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Deposits'
        '404':
          description: Deposits not found
securityDefinitions:
  APIKeyHeader:
    type: "apiKey"
    name: "x-api-key"
    in: "header"
definitions:
  Users:
    type: object
    required:
      - username
      - password
      - email
    properties:
      username:
        type: string
        example: user000
      password:
        type: string
        example: XasdVf90ds
      email:
        type: string
        example: user000.email@email.com
  Groups:
    type: object
    required:
      - group_name
      - category_id
    properties:
      id:
        type: integer
        format: int32
        example: 1
      group_name:
        type: string
        example: XasdVf90ds
      category_id:
        type: integer
        format: int32
        example: 1
  Shares:
    type: object
    required:
      - group_id
      - share_date
      - max_guests
      - host
      - cost
      - currency
      - type
    properties:
      id:
        type: integer
        format: int32
        example: 1
      group_id:
        type: integer
        format: int32
        example: 1
      share_date:
        type: string
        example: '04-12-2018 20:38:02'
      max_guests:
        type: integer
        format: int32
        example: 1
      host:
        type: string
        example: user000
      guests:
        type: array
        items:
          type: string
          example: user001
      cost:
        type: integer
        example: 10
      currency:
        type: string
        example: EUR
      type:
        type: string
        example: F
  Deposits:
    type: object
    required:
      - deposit_date
      - cost
      - currency
      - payer
      - beneficiary
    properties:
      id:
        type: integer
        format: int32
        example: 1
      deposit_date:
        type: string
        example: '04-12-2018 20:38:02'
      cost:
        type: integer
        example: 10
      currency:
        type: string
        example: EUR
      payer:
        type: string
        example: user000
      beneficiary:
        type: string
        example: user001
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
